kind: ConfigMap
apiVersion: v1
metadata:
  name: pet-clinic-config
data:
  application.yaml: |-
    server:
      port: 8080
      compression:
        enabled: true
        mime-types: application/json,text/css,application/javascript
        min-response-size: 2048

    wavefront:
      application:
        name: pet-clinic-k8s
      freemium-account: false
    management:
      metrics:
        export:
          wavefront:
            enabled: false

    # embedded database init, supports mysql too trough the 'mysql' spring profile
    spring:
      datasource:
        schema: classpath*:db/hsqldb/schema.sql
        data: classpath*:db/hsqldb/data.sql
      jpa:
        show-sql: true
        hibernate:
          ddl-auto: none
          generate-ddl: false
      sleuth:
        sampler:
          probability: 1.0
        config:
          # Allow the microservices to override the remote properties with their own System properties or config file
          allow-override: true
          # Override configuration with any local property source
          override-none: true
      cloud:
        services:
          registrationMethod: direct

    # Spring Boot 1.5 makes actuator secure by default
    management.security.enabled: false
    # Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
    # Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
    spring.cloud.refresh.refreshable: false

    # Logging
    logging.level.org.springframework: INFO
    logging.level.org.hibernate.SQL: DEBUG
    logging.level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    logging.level.org.springframework.jdbc.core.JdbcTemplate: DEBUG
    logging.level.org.springframework.jdbc.core.StatementCreatorUtils: TRACE

    # Metrics
    management:
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
      endpoints:
        web:
          exposure:
            include: '*'
      metrics:
        export:
          prometheus:
            enabled: true
    customers-service-id: http://customers-service.default.svc.cluster.local:8080
    vists-service-id: http://vists-service.default.svc.cluster.local:8080

    spring:
      messages:
        basename: messages/messages
      cloud:
        kubernetes:
          discovery:
            enabled: true
        loadbalancer:
          ribbon:
            enabled: false
        gateway:
          routes:
          x-forwarded:  
            enabled: true 
            for-enabled: true 
            proto-enabled: true 
            host-append: false  
            port-append: false  
            proto-append: false       
            - id: vets-service
              uri: http://vets-service.default.svc.cluster.local:8080
              predicates:
                - Path=/api/vet/**
              filters:
                - StripPrefix=1
            - id: visits-service
              uri: http://visits-service.default.svc.cluster.local:8080
              predicates:
                - Path=/api/visit/**
              filters:
                - StripPrefix=1
            - id: customers-service
              uri: http://customers-service.default.svc.cluster.local:8080
              predicates:
                - Path=/api/customer/**
              filters:
                - StripPrefix=1
    vets:
      cache:
        ttl: 60
        heap-size: 100

